paths:
  /users/all:
    get:
      tags:
        - User
      description: Get all users (not deleted)
      produces:
        - application/json
      parameters:
        - name: x-auth-token
          in: header
          description: token to be passed in header
          required: true
          type: string
        - name: page
          in: query
          description: Page Number
          type: integer
        - name: size
          in: query
          description: Number of records in a page
          type: integer
      responses:
        200:
          description: Users fetched successfully
        401:
          description: Token not provided
        403:
          description: Access Forbidden
        400:
          description: Error

  /users/:
    post:
      tags:
        - User
      description: Register new user
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: UserRegister object
          required: true
          schema:
            $ref: '#/definitions/UserRegister'
      responses:
        200:
          description: User Registered
        400:
          description: Error
    put:
      tags:
        - User
      description: Update user
      produces:
        - application/json
      parameters:
        - name: x-auth-token
          in: header
          description: token to be passed in header
          required: true
          type: string
        - in: body
          name: user
          description: UserUpdate object
          required: true
          schema:
            $ref: '#/definitions/UserUpdate'
      responses:
        200:
          description: User Updated
        401:
          description: Token not provided
        400:
          description: Error
    get:
      tags:
        - User
      description: Get logged in user
      produces:
        - application/json
      parameters:
        - name: x-auth-token
          in: header
          description: token to be passed in header
          required: true
          type: string
      responses:
        200:
          description: User Fetched
        401:
          description: Token not provided
        400:
          description: Error

  /users/{id}:
    delete:
      tags:
        - User
      description: Delete user
      produces:
        - application/json
      parameters:
        - name: x-auth-token
          in: header
          description: token to be passed in header
          required: true
          type: string
        - in: path
          name: id
          description: ID of the user to delete
          required: true
          schema:
            type: integer
      responses:
        200:
          description: User Deleted
        401:
          description: Token not provided
        403:
          description: Access Forbidden
        400:
          description: Error
    get:
      tags:
        - User
      description: Get user based on id
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the user to fetch
          required: true
          schema:
            type: integer
      responses:
        200:
          description: User Fetched
        404:
          description: User not found

  /users/changePassword:
    post:
      tags:
        - User
      description: Change user password
      produces:
        - application/json
      parameters:
        - name: x-auth-token
          in: header
          description: token to be passed in header
          required: true
          type: string
        - in: body
          name: user
          description: ChangePassword object
          required: true
          schema:
            $ref: '#/definitions/UserChangePassword'
      responses:
        200:
          description: Password Changed
        401:
          description: Token not provided
        400:
          description: Error

definitions: # Schema defination for request body
  UserRegister:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
  UserUpdate:
    properties:
      id:
        type: integer
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      phone:
        type: string
  UserChangePassword:
    properties:
      oldPassword:
        type: string
      newPassword:
        type: string
